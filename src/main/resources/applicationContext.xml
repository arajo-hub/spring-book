<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
    <!--    <bean id="connectionMaker" class="springbook.user.dao.DConnectionMaker" />-->

    <!-- XML을 이용한 DB 연결정보 설정 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/springbook" />
        <property name="username" value="spring" />
        <property name="password" value="book" />
    </bean>

<!--    <bean id="userService" class="springbook.user.service.UserServiceImpl">-->
<!--        <property name="userDao" ref="userDao" />-->
<!--        <property name="transactionManager" ref="transactionManager" />-->
<!--        <property name="mailSender" ref="mailSender" />-->
<!--    </bean>-->

    <!-- 데코레이터 -->
    <bean id="userService" class="springbook.user.service.UserServiceTx">
        <property name="transactionManager" ref="transactionManager" />
        <property name="userService" ref="userServiceImpl" />
    </bean>

    <!-- 타깃 -->
    <bean id="userServiceImpl" class="springbook.user.service.UserServiceImpl">
        <property name="userDao" ref="userDao" />
        <property name="mailSeder" ref="mailSender" />
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="mail.server.com" />
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- JTA를 이용하는 것으로 하고 싶다면 아래와 같이 고치면 된다. -->
    <!--    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager" />-->

    <bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
        <!--        <property name="connectionMaker" ref="connectionMaker" />-->
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="message" class="springbook.learingtest.spring.factorybean.MessageFactoryBean">
        <property name="text" value="Factory Bean" />
    </bean>

    <!-- UserService에 대한 트랜잭션 프록시 팩토리 빈 -->
<!--    <bean id="userService" class="springbook.user.service.TxProxyFactoryBean">-->
<!--        <property name="target" ref="userServiceImpl" />-->
<!--        <property name="transactionManager" ref="transactionManager" />-->
<!--        <property name="pattern" value="upgradeLevels" />-->
<!--        <property name="serviceInterface" value="springbook.user.service.UserService" />-->
<!--    </bean>-->

    <bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="userServiceImpl" />
        <property name="interceptorNames">
            <list>
                <value>transactionAdvisor</value>
            </list>
        </property>
    </bean>

    <bean id="coreServiceTarget" class="complex.module.CoreServiceImpl">
        <property name="coreDao" ref="coreDao" />
    </bean>

    <bean id="coreService" class="springbook.service.TxProxyFactoryBean">
        <property name="target" ref="coreServiceTarget" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="pattern" value="" />
        <property name="serviceInterface" value="complex.module.CoreService" />
    </bean>

    <bean id="transactionAdvice" class="springbook.user.service.TransactionAdvice">
        <property name="transactionManager" ref="transactionManager" />
    </bean>

    <bean id="transactionPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">
        <property name="mappedName" value="upgrade*" />
    </bean>

    <bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="advice" ref="transactionAdvice" />
        <property name="pointcut" ref="transactionPointcut" />
    </bean>

</beans>