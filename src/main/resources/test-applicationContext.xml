<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                            http://www.springframework.org/schema/aop
                            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                            http://www.springframework.org/schema/tx
                            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

<!--    <bean id="connectionMaker" class="springbook.user.dao.DConnectionMaker" />-->

    <!-- XML을 이용한 DB 연결정보 설정 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/testdb" />
        <property name="username" value="spring" />
        <property name="password" value="book" />
    </bean>

<!--    <bean id="userService" class="springbook.user.service.UserServiceImpl">-->
<!--        <property name="userDao" ref="userDao" />-->
<!--        <property name="transactionManager" ref="transactionManager" />-->
<!--        <property name="mailSender" ref="mailSender" />-->
<!--    </bean>-->

<!--    <bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">-->
<!--        <property name="target" ref="userServiceImpl" />-->
<!--        <property name="interceptorNames">-->
<!--            <list>-->
<!--                <value>transactionAdvisor</value>-->
<!--            </list>-->
<!--        </property>-->
<!--    </bean>-->

    <bean id="userService" class="springbook.service.UserServiceImpl">
        <property name="userDao" ref="userDao" />
        <property name="mailSender" ref="mailSender" />
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="mail.server.com" />
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- JTA를 이용하는 것으로 하고 싶다면 아래와 같이 고치면 된다. -->
    <!--    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager" />-->

    <bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
        <!--        <property name="connectionMaker" ref="connectionMaker" />-->
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="transactionAdvice" class="springbook.user.service.TransactionAdvice">
        <property name="transactionManager" ref="transactionManager" />
    </bean>

<!--    <bean id="transactionPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">-->
<!--        <property name="mappedClassName" value="*ServiceImpl" />-->
<!--        <property name="mappedName" value="upgrade*" />-->
<!--    </bean>-->

    <!-- 포인트컷 표현식을 사용한 빈 설정 -->
    <bean id="transactionPointcut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
        <property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))" />
    </bean>

    <bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="advice" ref="transactionAdvice" />
        <property name="pointcut" ref="transactionPointcut" />
    </bean>

    <!-- 다른 빈에서 참조되거나 코드에서 빈 이름으로 조회될 필요가 없는 빈이라면 아이디를 등록하지 않아도 무방하다. -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

    <bean id="testUserService" class="springbook.user.service.UserDaoTest$TestUserServiceImpl" parent="userService" />

    <aop:config>
<!--        <aop:pointcut id="transactionPointcut" expression="execution(* *..*ServiceImpl.upgrade*(..))" />-->
<!--        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut" />-->
        <!-- 아래는 포인트컷을 내장한 어드바이저 태그 -->
        <aop:advisor advice-ref="transactionAdvice" pointcut="execution(* *..*ServiceImpl.upgrade*(..))" />
    </aop:config>

    <aop:config>
        <aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)" />
    </aop:config>

<!--    <bean id="transactionAdvice" class="org.springframework.transaction.interceptor.TransactionInterceptor">-->
<!--        <property name="transactionManager" ref="transactionManager" />-->
<!--        <property name="transactionAttributes">-->
<!--            <props>-->
<!--                <prop key="get*">PROPAGATION_REQUIRED,readOnly,timeout_30</prop>-->
<!--                <prop key="upgrade*">PROPAGATION_REQUIRES_NEW,ISOLATION_SERIALIZABLE</prop>-->
<!--                <prop key="*">PROPAGATION_REQUIRED</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->

    <bean id="transactionAdvice" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager" />
        <property name="transactionAttributes">
            <props>
                <prop key="get*">PROPAGATION_REQUIRED,readOnly,timeout_30</prop>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
<!--        <tx:attributes>-->
<!--            <tx:method name="get*" propagation="REQUIRED" read-only="true" timeout="30" />-->
<!--            <tx:method name="upgrade*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE" />-->
<!--            <tx:method name="*" propagation="REQUIRED" />-->
<!--        </tx:attributes>-->
        <!-- default -->
        <tx:attributes>
            <tx:method name="*"/> <!-- 읽기전용 속성 추가 -->
        </tx:attributes>
    </tx:advice>

    <!--    <tx:advice id="batchTxAdvice">-->
    <!--        <tx:attributes>...</tx:attributes>-->
    <!--    </tx:advice>-->

</beans>